version: "3.9"

services:
  db:
    image: postgres:latest
    container_name: django
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=property_finder
      - POSTGRES_USER=skyloov
      - POSTGRES_PASSWORD=skyloov1234
    volumes:
      - django-data:/var/lib/postgresql/data

  elasticsearch:
    restart: always
    image: elasticsearch:7.6.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - TimeOutStartSec=600
    volumes:
      - es-data:/usr/share/elasticsearch/data

  redis:
    restart: always
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  celery:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: worker
    command: ./docker/celery_entrypoint.sh
    environment:
      - DATABASE_URL=psql://skyloov:skyloov1234@db:5432/property_finder
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: beats
    command: ./docker/beats_entrypoint.sh
    environment:
      - DATABASE_URL=psql://skyloov:skyloov1234@db:5432/property_finder
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - celery
    restart: on-failure

  kafka:
    image: apache/kafka-native
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: property_finder
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9093"


volumes:
  es-data:
  postgres-data:
  redis-data:
  kafka-ui-data:
